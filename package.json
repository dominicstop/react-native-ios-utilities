{
  "name": "react-native-ios-utilities",
  "version": "4.5.0",
  "description": "Utilities for react-native + iOS",
  "main": "build/index.js",
  "types": "build/index.d.ts",
  "react-native": "src/index",
  "source": "src/index",
  "files": [
    "src",
    "lib",
    "android",
    "ios",
    "cpp",
    "ReactNativeIosUtilities.podspec",
    "!lib/typescript/example",
    "!android/build",
    "!ios/build",
    "!**/__tests__",
    "!**/__fixtures__",
    "!**/__mocks__",
    "build",
    "expo-module.config.json"
  ],
  "scripts": {
    "example": "yarn workspace react-native-ios-context-menu-example",
    "typescript": "tsc --noEmit --project tsconfig.build.json",
    "typescript:example": "cd example && tsc --noEmit --project tsconfig.json",
    "typescript:all": "yarn run typescript ; yarn run typescript-example",
    "lint": "eslint \"**/*.{js,ts,tsx}\"",
    "lint:circular-dep": "npx dpdm --no-warning --no-tree ./src/index.ts ; npx madge --circular --extensions ts ./src",
    "clean": "del-cli android/build example/android/build example/android/app/build example/ios/build lib",
    "prepare": "expo-module prepare",
    "release": "release-it --only-version",
    "open:ios": "open -a \"Xcode\" example/ios",
    "open:docs": "open -a \"Typora\" ./docs/README-01-Pre.md",
    "open:android": "open -a \"Android Studio\" example/android",
    "close:ios": "killall Xcode",
    "reopen:ios": "yarn run close:ios ; yarn run open:ios",
    "build:update-version": "PACKAGE_VERSION=$(cat package.json | grep version | head -1 | awk -F: '{ print $2 }' | sed 's/[\",]//g' | sed 's/-.*//') ; cd example/ios ; agvtool new-marketing-version $PACKAGE_VERSION ; xcrun agvtool next-version -all ; cd ../..",
    "build": "yarn run build:js ; yarn run build:ios ; yarn run build:docs ; yarn run expo-module build",
    "build:js": "yarn run lint ; yarn run lint:circular-dep ; yarn run typescript",
    "build:ios": "cd ./example/ios ; BUILD_INFO=$(xcodebuild -project ./*.xcodeproj -showBuildSettings -list -json | tr -d ' ' | tr -d '\n') ; SCHEME_NAME=$(node -pe 'JSON.parse(process.argv[1]).project.schemes[0]' $BUILD_INFO) ; xcodebuild -workspace *.xcworkspace -scheme $SCHEME_NAME -destination 'generic/platform=iOS'",
    "build:ios-info": "cd ./example/ios ; xcodebuild -project ./*.xcodeproj -showBuildSettings -list ; xcodebuild -project ./*.xcodeproj -showBuildSettings",
    "build:docs": "sh ./make-readme.sh",
    "run:release": "cd example && npx react-native run-ios --configuration Release",
    "run:debug": "cd example && npx react-native run-ios --configuration Debug",
    "build-and-run": "yarn run build && yarn run run:debug && yarn run run:release",
    "pod-install": "cd example/ios && RCT_NEW_ARCH_ENABLED=1 pod install ; cd ../.. ; yarn run nuke:example-pods-env ; yarn run build:update-version",
    "pod-install:old": "cd example/ios && RCT_NEW_ARCH_ENABLED=0 pod install ; cd ../.. ; yarn run nuke:example-pods-env ; yarn run build:update-version",
    "pod-install:reopen": "yarn run close:ios ; yarn run pod-install ; yarn run open:ios",
    "pod-install:reopen-old": "yarn run close:ios ; yarn run pod-install:old ; yarn run open:ios",
    "nuke:node-modules": "rm -rfv ./yarn.lock ./node_modules ; cd example ; rm -rfv ./node_modules ; cd ../..",
    "nuke:example-pods": "cd example/ios ; pod cache clean --all ; rm -rfv ./Pods ./build ./Podfile.lock ; cd ../..",
    "nuke:example-pods-env": "cd example/ios && rm -rfv ./.xcode.env.local ./.xcode.env",
    "nuke:all": "yarn run nuke:node-modules ; yarn run nuke:example-pods ;  yarn run nuke:example-pods-env",
    "update-dep": "yarn add react-native-ios-utilities --dev ; cd example ; yarn add react-native-ios-utilities ; cd ..",
    "update-dep:next": "yarn add react-native-ios-utilities@next --dev ; cd example ; yarn add react-native-ios-utilities@next ; cd ..",
    "update-dep:pods": "cd example/ios ; pod install --repo-update ; pod update DGSwiftUtilities ContextMenuAuxiliaryPreview ; cd ../.. ; yarn run build:update-version",
    "initialize": "yarn initialize:js ; yarn run pod-install",
    "initialize:js": "yarn install ; cd example ; yarn install ;  npx expo install ; cd ..",
    "initialize:reset": "yarn run nuke:all && yarn run initialize"
  },
  "keywords": [
    "react-native",
    "ios",
    "utilities",
    "utility"
  ],
  "repository": "https://github.com/dominicstop/react-native-ios-utilities",
  "author": "Dominic Go <dominic@dominicgo.dev> (https://github.com/dominicstop)",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/dominicstop/react-native-ios-utilities/issues"
  },
  "homepage": "https://github.com/dominicstop/react-native-ios-utilities#readme",
  "publishConfig": {
    "registry": "https://registry.npmjs.org/"
  },
  "dependencies": {},
  "devDependencies": {
    "@types/react": "^18.0.25",
    "@types/react-native": "^0.72.3",
    "expo-module-scripts": "^3.0.11",
    "expo-modules-core": "^1.5.11",
    "release-it": "^16.2.1"
  },
  "peerDependencies": {
    "expo": "*",
    "react": "*",
    "react-native": "*"
  },
  "release-it": {
    "git": {
      "commitMessage": "⚙️ Chore: Release ${version}",
      "tagName": "v${version}"
    },
    "npm": {
      "publish": true
    },
    "github": {
      "release": true
    }
  }
}
